---
source: crates/parsing/src/grammar/tests.rs
expression: result
input_file: crates/parsing/src/grammar/inputs/passing/type/non-empty-tail-row.input
---
Input: ( a :: Int, b :: Int | r )

Start { kind: TypeOperatorChain }
  Start { kind: ApplicationType }
    Start { kind: RowType }
      Start { kind: Wrapped }
        Token { kind: LeftParenthesis }
        Start { kind: RowInner }
          Start { kind: Separated }
            Start { kind: RowField }
              Start { kind: Name }
                Token { kind: Label }
              Finish
              Token { kind: Colon2 }
              Start { kind: TypeOperatorChain }
                Start { kind: ApplicationType }
                  Start { kind: ConstructorType }
                    Start { kind: QualifiedName }
                      Start { kind: NameRef }
                        Token { kind: Upper }
                      Finish
                    Finish
                  Finish
                  Start { kind: OneOrMore }
                  Finish
                Finish
                Start { kind: OneOrMore }
                Finish
              Finish
            Finish
            Token { kind: Comma }
            Start { kind: RowField }
              Start { kind: Name }
                Token { kind: Label }
              Finish
              Token { kind: Colon2 }
              Start { kind: TypeOperatorChain }
                Start { kind: ApplicationType }
                  Start { kind: ConstructorType }
                    Start { kind: QualifiedName }
                      Start { kind: NameRef }
                        Token { kind: Upper }
                      Finish
                    Finish
                  Finish
                  Start { kind: OneOrMore }
                  Finish
                Finish
                Start { kind: OneOrMore }
                Finish
              Finish
            Finish
          Finish
          Start { kind: RowTail }
            Token { kind: Pipe }
            Start { kind: TypeOperatorChain }
              Start { kind: ApplicationType }
                Start { kind: VariableType }
                  Start { kind: NameRef }
                    Token { kind: Lower }
                  Finish
                Finish
                Start { kind: OneOrMore }
                Finish
              Finish
              Start { kind: OneOrMore }
              Finish
            Finish
          Finish
        Finish
        Token { kind: RightParenthesis }
      Finish
    Finish
    Start { kind: OneOrMore }
    Finish
  Finish
  Start { kind: OneOrMore }
  Finish
Finish
