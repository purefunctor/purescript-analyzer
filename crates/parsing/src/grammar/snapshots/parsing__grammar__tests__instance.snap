---
source: crates/parsing/src/grammar/tests.rs
expression: result
---
Input: module Main where

instance Eq

instance withName :: Eq

instance Eq a where
  eq :: a -> a -> Boolean
  eq _ _ = false

instance Eq a => Ord a where
  ord :: a -> a -> Ordering
  ord _ _ = EQ

instance First

else instance Second

Start { kind: Module }
  Start { kind: ModuleHeader }
    Token { kind: ModuleKw }
    Start { kind: ModuleName }
      Start { kind: Name }
        Token { kind: Upper }
      Finish
    Finish
    Token { kind: WhereKw }
  Finish
  Token { kind: LayoutStart }
  Start { kind: ModuleImports }
  Finish
  Start { kind: ModuleBody }
    Start { kind: InstanceChain }
      Start { kind: InstanceDeclaration }
        Token { kind: InstanceKw }
        Start { kind: QualifiedName }
          Start { kind: Name }
            Token { kind: Upper }
          Finish
        Finish
        Start { kind: InstanceArguments }
        Finish
      Finish
    Finish
    Token { kind: LayoutSep }
    Start { kind: InstanceChain }
      Start { kind: InstanceDeclaration }
        Token { kind: InstanceKw }
        Start { kind: Name }
          Token { kind: Lower }
        Finish
        Token { kind: Colon2 }
        Start { kind: QualifiedName }
          Start { kind: Name }
            Token { kind: Upper }
          Finish
        Finish
        Start { kind: InstanceArguments }
        Finish
      Finish
    Finish
    Token { kind: LayoutSep }
    Start { kind: InstanceChain }
      Start { kind: InstanceDeclaration }
        Token { kind: InstanceKw }
        Start { kind: QualifiedName }
          Start { kind: Name }
            Token { kind: Upper }
          Finish
        Finish
        Start { kind: InstanceArguments }
          Start { kind: VariableType }
            Start { kind: NameRef }
              Token { kind: Lower }
            Finish
          Finish
        Finish
        Token { kind: WhereKw }
        Token { kind: LayoutStart }
        Start { kind: LayoutList }
          Start { kind: InstanceMemberSignature }
            Start { kind: Name }
              Token { kind: Lower }
            Finish
            Token { kind: Colon2 }
            Start { kind: ArrowType }
              Start { kind: VariableType }
                Start { kind: NameRef }
                  Token { kind: Lower }
                Finish
              Finish
              Token { kind: RightArrow }
              Start { kind: ArrowType }
                Start { kind: VariableType }
                  Start { kind: NameRef }
                    Token { kind: Lower }
                  Finish
                Finish
                Token { kind: RightArrow }
                Start { kind: ConstructorType }
                  Start { kind: QualifiedName }
                    Start { kind: NameRef }
                      Token { kind: Upper }
                    Finish
                  Finish
                Finish
              Finish
            Finish
          Finish
          Token { kind: LayoutSep }
          Start { kind: InstanceMemberEquation }
            Start { kind: Name }
              Token { kind: Lower }
            Finish
            Start { kind: BinderList }
              Start { kind: WildcardBinder }
                Token { kind: Underscore }
              Finish
              Start { kind: WildcardBinder }
                Token { kind: Underscore }
              Finish
            Finish
            Start { kind: UnconditionalBinding }
              Token { kind: Equal }
              Start { kind: WhereExpression }
                Start { kind: LiteralExpression }
                  Token { kind: LiteralFalse }
                Finish
              Finish
            Finish
          Finish
        Finish
        Token { kind: LayoutEnd }
      Finish
    Finish
    Token { kind: LayoutSep }
    Start { kind: InstanceChain }
      Start { kind: InstanceDeclaration }
        Token { kind: InstanceKw }
        Start { kind: InstanceAssertions }
          Start { kind: ApplicationType }
            Start { kind: ConstructorType }
              Start { kind: QualifiedName }
                Start { kind: NameRef }
                  Token { kind: Upper }
                Finish
              Finish
            Finish
            Start { kind: ArgumentList }
              Start { kind: VariableType }
                Start { kind: NameRef }
                  Token { kind: Lower }
                Finish
              Finish
            Finish
          Finish
          Token { kind: RightThickArrow }
        Finish
        Start { kind: QualifiedName }
          Start { kind: Name }
            Token { kind: Upper }
          Finish
        Finish
        Start { kind: InstanceArguments }
          Start { kind: VariableType }
            Start { kind: NameRef }
              Token { kind: Lower }
            Finish
          Finish
        Finish
        Token { kind: WhereKw }
        Token { kind: LayoutStart }
        Start { kind: LayoutList }
          Start { kind: InstanceMemberSignature }
            Start { kind: Name }
              Token { kind: Lower }
            Finish
            Token { kind: Colon2 }
            Start { kind: ArrowType }
              Start { kind: VariableType }
                Start { kind: NameRef }
                  Token { kind: Lower }
                Finish
              Finish
              Token { kind: RightArrow }
              Start { kind: ArrowType }
                Start { kind: VariableType }
                  Start { kind: NameRef }
                    Token { kind: Lower }
                  Finish
                Finish
                Token { kind: RightArrow }
                Start { kind: ConstructorType }
                  Start { kind: QualifiedName }
                    Start { kind: NameRef }
                      Token { kind: Upper }
                    Finish
                  Finish
                Finish
              Finish
            Finish
          Finish
          Token { kind: LayoutSep }
          Start { kind: InstanceMemberEquation }
            Start { kind: Name }
              Token { kind: Lower }
            Finish
            Start { kind: BinderList }
              Start { kind: WildcardBinder }
                Token { kind: Underscore }
              Finish
              Start { kind: WildcardBinder }
                Token { kind: Underscore }
              Finish
            Finish
            Start { kind: UnconditionalBinding }
              Token { kind: Equal }
              Start { kind: WhereExpression }
                Start { kind: ConstructorExpression }
                  Start { kind: QualifiedName }
                    Start { kind: NameRef }
                      Token { kind: Upper }
                    Finish
                  Finish
                Finish
              Finish
            Finish
          Finish
        Finish
        Token { kind: LayoutEnd }
      Finish
    Finish
    Token { kind: LayoutSep }
    Start { kind: InstanceChain }
      Start { kind: InstanceDeclaration }
        Token { kind: InstanceKw }
        Start { kind: QualifiedName }
          Start { kind: Name }
            Token { kind: Upper }
          Finish
        Finish
        Start { kind: InstanceArguments }
        Finish
      Finish
      Token { kind: ElseKw }
      Start { kind: InstanceDeclaration }
        Token { kind: InstanceKw }
        Start { kind: QualifiedName }
          Start { kind: Name }
            Token { kind: Upper }
          Finish
        Finish
        Start { kind: InstanceArguments }
        Finish
      Finish
    Finish
  Finish
  Token { kind: LayoutEnd }
Finish
