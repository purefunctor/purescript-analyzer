---
source: crates/parsing/src/grammar/tests.rs
expression: result
input_file: crates/parsing/src/grammar/inputs/passing/file/data.input
---
Input: module Main where

data Void :: Type
data Void

data Unit = Unit

data Maybe a = Just a | Nothing

data Maybe (a :: Type) = Just a | Nothing

Start { kind: Module }
  Start { kind: ModuleHeader }
    Token { kind: ModuleKw }
    Start { kind: ModuleName }
      Start { kind: Name }
        Token { kind: Upper }
      Finish
    Finish
    Token { kind: WhereKw }
  Finish
  Token { kind: LayoutStart }
  Start { kind: ModuleImports }
    Start { kind: ZeroOrMore }
    Finish
  Finish
  Start { kind: ModuleBody }
    Start { kind: ZeroOrMore }
      Start { kind: DataAnnotation }
        Token { kind: DataKw }
        Start { kind: Name }
          Token { kind: Upper }
        Finish
        Token { kind: Colon2 }
        Start { kind: ConstructorType }
          Start { kind: QualifiedName }
            Start { kind: NameRef }
              Token { kind: Upper }
            Finish
          Finish
        Finish
      Finish
      Token { kind: LayoutSep }
      Start { kind: DataDeclaration }
        Token { kind: DataKw }
        Start { kind: Name }
          Token { kind: Upper }
        Finish
        Start { kind: DataVariables }
        Finish
      Finish
      Token { kind: LayoutSep }
      Start { kind: DataDeclaration }
        Token { kind: DataKw }
        Start { kind: Name }
          Token { kind: Upper }
        Finish
        Start { kind: DataVariables }
        Finish
        Start { kind: DataConstructors }
          Token { kind: Equal }
          Start { kind: DataConstructor }
            Start { kind: Name }
              Token { kind: Upper }
            Finish
            Start { kind: ConstructorFields }
            Finish
          Finish
        Finish
      Finish
      Token { kind: LayoutSep }
      Start { kind: DataDeclaration }
        Token { kind: DataKw }
        Start { kind: Name }
          Token { kind: Upper }
        Finish
        Start { kind: DataVariables }
          Start { kind: TypeVariableName }
            Start { kind: Name }
              Token { kind: Lower }
            Finish
          Finish
        Finish
        Start { kind: DataConstructors }
          Token { kind: Equal }
          Start { kind: DataConstructor }
            Start { kind: Name }
              Token { kind: Upper }
            Finish
            Start { kind: ConstructorFields }
              Start { kind: VariableType }
                Start { kind: NameRef }
                  Token { kind: Lower }
                Finish
              Finish
            Finish
          Finish
          Token { kind: Pipe }
          Start { kind: DataConstructor }
            Start { kind: Name }
              Token { kind: Upper }
            Finish
            Start { kind: ConstructorFields }
            Finish
          Finish
        Finish
      Finish
      Token { kind: LayoutSep }
      Start { kind: DataDeclaration }
        Token { kind: DataKw }
        Start { kind: Name }
          Token { kind: Upper }
        Finish
        Start { kind: DataVariables }
          Start { kind: TypeVariableKinded }
            Start { kind: Wrapped }
              Token { kind: LeftParenthesis }
              Start { kind: Labeled }
                Start { kind: Name }
                  Token { kind: Lower }
                Finish
                Token { kind: Colon2 }
                Start { kind: ConstructorType }
                  Start { kind: QualifiedName }
                    Start { kind: NameRef }
                      Token { kind: Upper }
                    Finish
                  Finish
                Finish
              Finish
              Token { kind: RightParenthesis }
            Finish
          Finish
        Finish
        Start { kind: DataConstructors }
          Token { kind: Equal }
          Start { kind: DataConstructor }
            Start { kind: Name }
              Token { kind: Upper }
            Finish
            Start { kind: ConstructorFields }
              Start { kind: VariableType }
                Start { kind: NameRef }
                  Token { kind: Lower }
                Finish
              Finish
            Finish
          Finish
          Token { kind: Pipe }
          Start { kind: DataConstructor }
            Start { kind: Name }
              Token { kind: Upper }
            Finish
            Start { kind: ConstructorFields }
            Finish
          Finish
        Finish
      Finish
    Finish
  Finish
  Token { kind: LayoutEnd }
Finish
