---
source: crates/parsing/src/grammar/tests.rs
expression: result
input_file: crates/parsing/src/grammar/inputs/passing/file/role-annotations-and-underscore-types.input
---
Input: module A where

newtype A a b c = c  

type rule A nominal phantom representational

t :: A _ _ _
t = A 1

Start { kind: Module }
  Start { kind: ModuleHeader }
    Token { kind: ModuleKw }
    Start { kind: ModuleName }
      Start { kind: Name }
        Token { kind: Upper }
      Finish
    Finish
    Token { kind: WhereKw }
  Finish
  Token { kind: LayoutStart }
  Start { kind: ModuleImports }
    Start { kind: ZeroOrMore }
    Finish
  Finish
  Start { kind: ModuleBody }
    Start { kind: ZeroOrMore }
      Start { kind: ValueEquationDeclaration }
        Start { kind: Error }
          Token { kind: NewtypeKw }
          Error { message: "expected a name" }
        Finish
        Start { kind: ZeroOrMore }
          Start { kind: ConstructorBinder }
            Start { kind: QualifiedName }
              Start { kind: NameRef }
                Token { kind: Upper }
              Finish
            Finish
          Finish
          Start { kind: VariableBinder }
            Start { kind: Name }
              Token { kind: Lower }
            Finish
          Finish
          Start { kind: VariableBinder }
            Start { kind: Name }
              Token { kind: Lower }
            Finish
          Finish
          Start { kind: VariableBinder }
            Start { kind: Name }
              Token { kind: Lower }
            Finish
          Finish
        Finish
        Start { kind: UnconditionalBinding }
          Token { kind: Equal }
          Start { kind: WhereExpression }
            Start { kind: VariableExpression }
              Start { kind: QualifiedName }
                Start { kind: NameRef }
                  Token { kind: Lower }
                Finish
              Finish
            Finish
            Start { kind: Error }
              Token { kind: LayoutSep }
              Error { message: "invalid expression" }
            Finish
          Finish
        Finish
      Finish
      Error { message: "expected LayoutEnd or LayoutSep" }
    Finish
  Finish
  Error { message: "expected LayoutEnd" }
Finish
