---
source: crates/parsing/src/grammar/tests.rs
expression: result
---
Input: module ForeignImport where 

foreign import ffi :: forall a b. a -> b

Start { kind: Module }
  Start { kind: ModuleHeader }
    Token { kind: ModuleKw }
    Start { kind: ModuleName }
      Start { kind: Name }
        Token { kind: Upper }
      Finish
    Finish
    Token { kind: WhereKw }
  Finish
  Token { kind: LayoutStart }
  Start { kind: ModuleImports }
  Finish
  Start { kind: ModuleBody }
    Start { kind: ForeignValueDeclaration }
      Token { kind: ForeignKw }
      Token { kind: ImportKw }
      Start { kind: Name }
        Token { kind: Lower }
      Finish
      Token { kind: Colon2 }
      Start { kind: ForallType }
        Token { kind: ForallKw }
        Start { kind: ForallVariables }
          Start { kind: TypeVariableName }
            Start { kind: Name }
              Token { kind: Lower }
            Finish
          Finish
          Start { kind: TypeVariableName }
            Start { kind: Name }
              Token { kind: Lower }
            Finish
          Finish
        Finish
        Token { kind: Period }
        Start { kind: ArrowType }
          Start { kind: VariableType }
            Start { kind: NameRef }
              Token { kind: Lower }
            Finish
          Finish
          Token { kind: RightArrow }
          Start { kind: VariableType }
            Start { kind: NameRef }
              Token { kind: Lower }
            Finish
          Finish
        Finish
      Finish
    Finish
  Finish
  Token { kind: LayoutEnd }
Finish
