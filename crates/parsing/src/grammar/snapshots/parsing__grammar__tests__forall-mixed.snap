---
source: crates/parsing/src/grammar/tests.rs
expression: result
---
Input: forall a (b :: C) @d (@e :: F). Type

Start { kind: ForallType }
  Token { kind: ForallKw }
  Start { kind: ForallVariables }
    Start { kind: TypeVariableName }
      Start { kind: Name }
        Token { kind: Lower }
      Finish
    Finish
    Start { kind: TypeVariableKinded }
      Token { kind: LeftParenthesis }
      Start { kind: Name }
        Token { kind: Lower }
      Finish
      Token { kind: Colon2 }
      Start { kind: ConstructorType }
        Start { kind: QualifiedName }
          Start { kind: NameRef }
            Token { kind: Upper }
          Finish
        Finish
      Finish
      Token { kind: RightParenthesis }
    Finish
    Start { kind: TypeVariableName }
      Token { kind: At }
      Start { kind: Name }
        Token { kind: Lower }
      Finish
    Finish
    Start { kind: TypeVariableKinded }
      Token { kind: LeftParenthesis }
      Token { kind: At }
      Start { kind: Name }
        Token { kind: Lower }
      Finish
      Token { kind: Colon2 }
      Start { kind: ConstructorType }
        Start { kind: QualifiedName }
          Start { kind: NameRef }
            Token { kind: Upper }
          Finish
        Finish
      Finish
      Token { kind: RightParenthesis }
    Finish
  Finish
  Token { kind: Period }
  Start { kind: ConstructorType }
    Start { kind: QualifiedName }
      Start { kind: NameRef }
        Token { kind: Upper }
      Finish
    Finish
  Finish
Finish
