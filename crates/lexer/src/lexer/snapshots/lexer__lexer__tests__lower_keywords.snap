---
source: crates/lexer/src/lexer/tests.rs
snapshot_kind: text
---
Ok(
    [
        Lexed {
            kind: Qualified(
                None,
                ADO,
            ),
            range: 0..3,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 3..4,
        },
        Lexed {
            kind: Qualified(
                None,
                AS,
            ),
            range: 4..6,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 6..7,
        },
        Lexed {
            kind: Qualified(
                None,
                CASE,
            ),
            range: 7..11,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 11..12,
        },
        Lexed {
            kind: Qualified(
                None,
                CLASS,
            ),
            range: 12..17,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 17..18,
        },
        Lexed {
            kind: Qualified(
                None,
                DATA,
            ),
            range: 18..22,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 22..23,
        },
        Lexed {
            kind: Qualified(
                None,
                DERIVE,
            ),
            range: 23..29,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 29..30,
        },
        Lexed {
            kind: Qualified(
                None,
                DO,
            ),
            range: 30..32,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 32..33,
        },
        Lexed {
            kind: Qualified(
                None,
                ELSE,
            ),
            range: 33..37,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 37..38,
        },
        Lexed {
            kind: Qualified(
                None,
                FALSE,
            ),
            range: 38..43,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 43..44,
        },
        Lexed {
            kind: Qualified(
                None,
                FOREIGN,
            ),
            range: 44..51,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 51..52,
        },
        Lexed {
            kind: Qualified(
                None,
                HIDING,
            ),
            range: 52..58,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 58..59,
        },
        Lexed {
            kind: Qualified(
                None,
                IF,
            ),
            range: 59..61,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 61..62,
        },
        Lexed {
            kind: Qualified(
                None,
                IMPORT,
            ),
            range: 62..68,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 68..69,
        },
        Lexed {
            kind: Qualified(
                None,
                IN,
            ),
            range: 69..71,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 71..72,
        },
        Lexed {
            kind: Qualified(
                None,
                INFIX,
            ),
            range: 72..77,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 77..78,
        },
        Lexed {
            kind: Qualified(
                None,
                INFIXL,
            ),
            range: 78..84,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 84..85,
        },
        Lexed {
            kind: Qualified(
                None,
                INFIXR,
            ),
            range: 85..91,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 91..92,
        },
        Lexed {
            kind: Qualified(
                None,
                INSTANCE,
            ),
            range: 92..100,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 100..101,
        },
        Lexed {
            kind: Qualified(
                None,
                LET,
            ),
            range: 101..104,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 104..105,
        },
        Lexed {
            kind: Qualified(
                None,
                MODULE,
            ),
            range: 105..111,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 111..112,
        },
        Lexed {
            kind: Qualified(
                None,
                NEWTYPE,
            ),
            range: 112..119,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 119..120,
        },
        Lexed {
            kind: Qualified(
                None,
                OF,
            ),
            range: 120..122,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 122..123,
        },
        Lexed {
            kind: Qualified(
                None,
                THEN,
            ),
            range: 123..127,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 127..128,
        },
        Lexed {
            kind: Qualified(
                None,
                TRUE,
            ),
            range: 128..132,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 132..133,
        },
        Lexed {
            kind: Qualified(
                None,
                TYPE,
            ),
            range: 133..137,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            range: 137..138,
        },
        Lexed {
            kind: Qualified(
                None,
                WHERE,
            ),
            range: 138..143,
        },
        Lexed {
            kind: Token(
                END_OF_FILE,
            ),
            range: 143..143,
        },
    ],
)
