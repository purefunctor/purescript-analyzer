---
source: crates/lexer/src/lexer/tests.rs
snapshot_kind: text
---
Ok(
    [
        Lexed {
            kind: Qualified(
                None,
                ADO,
            ),
            offset: 0,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 3,
        },
        Lexed {
            kind: Qualified(
                None,
                AS,
            ),
            offset: 4,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 6,
        },
        Lexed {
            kind: Qualified(
                None,
                CASE,
            ),
            offset: 7,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 11,
        },
        Lexed {
            kind: Qualified(
                None,
                CLASS,
            ),
            offset: 12,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 17,
        },
        Lexed {
            kind: Qualified(
                None,
                DATA,
            ),
            offset: 18,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 22,
        },
        Lexed {
            kind: Qualified(
                None,
                DERIVE,
            ),
            offset: 23,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 29,
        },
        Lexed {
            kind: Qualified(
                None,
                DO,
            ),
            offset: 30,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 32,
        },
        Lexed {
            kind: Qualified(
                None,
                ELSE,
            ),
            offset: 33,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 37,
        },
        Lexed {
            kind: Qualified(
                None,
                FALSE,
            ),
            offset: 38,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 43,
        },
        Lexed {
            kind: Qualified(
                None,
                FOREIGN,
            ),
            offset: 44,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 51,
        },
        Lexed {
            kind: Qualified(
                None,
                HIDING,
            ),
            offset: 52,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 58,
        },
        Lexed {
            kind: Qualified(
                None,
                IF,
            ),
            offset: 59,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 61,
        },
        Lexed {
            kind: Qualified(
                None,
                IMPORT,
            ),
            offset: 62,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 68,
        },
        Lexed {
            kind: Qualified(
                None,
                IN,
            ),
            offset: 69,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 71,
        },
        Lexed {
            kind: Qualified(
                None,
                INFIX,
            ),
            offset: 72,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 77,
        },
        Lexed {
            kind: Qualified(
                None,
                INFIXL,
            ),
            offset: 78,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 84,
        },
        Lexed {
            kind: Qualified(
                None,
                INFIXR,
            ),
            offset: 85,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 91,
        },
        Lexed {
            kind: Qualified(
                None,
                INSTANCE,
            ),
            offset: 92,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 100,
        },
        Lexed {
            kind: Qualified(
                None,
                LET,
            ),
            offset: 101,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 104,
        },
        Lexed {
            kind: Qualified(
                None,
                MODULE,
            ),
            offset: 105,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 111,
        },
        Lexed {
            kind: Qualified(
                None,
                NEWTYPE,
            ),
            offset: 112,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 119,
        },
        Lexed {
            kind: Qualified(
                None,
                OF,
            ),
            offset: 120,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 122,
        },
        Lexed {
            kind: Qualified(
                None,
                THEN,
            ),
            offset: 123,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 127,
        },
        Lexed {
            kind: Qualified(
                None,
                TRUE,
            ),
            offset: 128,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 132,
        },
        Lexed {
            kind: Qualified(
                None,
                TYPE,
            ),
            offset: 133,
        },
        Lexed {
            kind: Token(
                WHITESPACE,
            ),
            offset: 137,
        },
        Lexed {
            kind: Qualified(
                None,
                WHERE,
            ),
            offset: 138,
        },
        Lexed {
            kind: Token(
                END_OF_FILE,
            ),
            offset: 143,
        },
    ],
)
