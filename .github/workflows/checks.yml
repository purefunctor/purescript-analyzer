name: Cargo Build & Test

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Compilation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        toolchain:
          - stable

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}

      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2.8.0
        with:
          cache-bin: "false"
          prefix-key: "v5-maho-${{ matrix.os }}-${{ matrix.toolchain }}"

      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.15.3

      - name: Install cargo-nextest
        run: cargo binstall cargo-nextest just
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Test
        run: |
          cargo build --workspace --verbose
          cargo nextest run
          just integration

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}

      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2.8.0
        with:
          cache-bin: "false"
          prefix-key: "v5-maho-${{ matrix.toolchain }}"

      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.15.3

      - name: Install cargo-nextest
        run: cargo binstall cargo-nextest cargo-llvm-cov just
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Test
        run: |
          cargo build --workspace --verbose
          just coverage
          just coverage-codecov

      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: codecov.json
          fail_ci_if_error: true

  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run formatter
        run: cargo fmt --check
